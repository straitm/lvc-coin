#include "ligoanalysis.fcl"
#include "ligofilter.fcl"
#include "CalHit.fcl"
#include "Slicer4D.fcl"
#include "MultiHoughT.fcl"
#include "ElasticArmsHS.fcl"
#include "FuzzyKVertex.fcl"
#include "BreakPoint.fcl"
#include "EliminateBeamSpills.fcl"
#include "services.fcl"
#include "CelestialLocator.fcl"

process_name: ligondactivity

services:
{
  TFileService: { fileName: "histos.root" }
  scheduler:    { wantTracer: false wantSummary: true }
  TimeTracker:  { printSummary: true }
  message:      @local::standard_out
  @table::standard_services
  CelestialLocator:    @local::standard_celestial
}

eliminatebeam: @local::standard_eliminatebeamspills

eliminatebeam.spillfile: "dummy.txt"

##
# Do not use these lines yet.  Use the more conservative default cuts,
# since I have already started processing and these only recover 0.788%
# of the livetime
##

## Since we are only looking at events over ~100MeV, there's no reason
## to set a long window to avoid neutron captures.  Just get away from
## FEB flashers and Michels.
# eliminatebeam.bufferafter: 70e-6
#
## DDactivity1 triggers are almost always 50us.  They are based on slice
## duration, so it's possible that if a slice spans a microblock boundary, they
## can be 100us.  It's very very unlikely that a slice is over 100us long
## creating a 150us event.  So take 100us plus 50us as per
## EliminateBeamSpills.fcl.
# eliminatebeam.bufferbefore: 150e-6

##
# End "do not use these lines yet"
##

source:
{
  module_type: RootInput
  maxEvents: -1
}

thisone_breakpoint_here: @local::standard_breakpoint
thisone_breakpoint_here.FitAsPion: false
thisone_breakpoint_here.FitAsProton: false

this_here_ligofilter: @local::standard_ligofilter

this_here_ligoanalysis: @local::standard_ligoanalysis
this_here_ligoanalysis.AnalysisClass: NDactivity

# Use EBS *and* this
this_here_ligoanalysis.CutNDmultislices: true


physics:
{
  filters:
  {
    ebeam: @local::eliminatebeam
    ligofilter: @local::this_here_ligofilter
  }

  producers:
  {
    calhit: @local::standard_calhit
    slicer: @local::standard_slicer4d
    multihough:   @local::standard_multihough
    elasticarmshs: @local::standard_elasticarmshs
    fuzzykvertex: @local::standard_fuzzykvertex
    breakpoint: @local::thisone_breakpoint_here
    snanalysis: @local::this_here_ligoanalysis
  }

  reco: [ ebeam,
          ligofilter,
          calhit,
          slicer,
          multihough, # for breakpoint
          elasticarmshs, # for breakpoint
          fuzzykvertex, # for breakpoint
          breakpoint,
          ligoanalysis ]

 stream1: [ out1 ]

 end_paths: [ stream1 ]
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName:    "ligo.root"
  }
}
